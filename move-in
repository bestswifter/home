#!/bin/bash

pushd $HOME

  if [[ "$(uname -s)" = "Darwin" ]]; then
    if ! xcode-select --print-path > /dev/null; then
      echo "Installing Command Line Tools..."
      # https://apple.stackexchange.com/questions/107307/how-can-i-install-the-command-line-tools-completely-from-the-command-line
      touch /tmp/.com.apple.dt.CommandLineTools.installondemand.in-progress
      command_line_tools=$(softwareupdate -l |
        grep "\*.*Command Line" |
        head -n 1 | awk -F"*" '{print $2}' |
        sed -e 's/^ *//' |
        tr -d '\n')
      softwareupdate --install "$command_line_tools" --verbose
    fi
  fi

  if [[ -d $HOME/.home ]]; then
    ( cd .home && git pull --recurse-submodules=on-demand )
  else
    git clone --recursive https://github.com/sj26/home .home
  fi

  pushd .home
    for bundle in camelcasemotion textobj-function textobj-user; do
      if ! grep -q doc/tags .git/modules/.vim/bundle/$bundle/info/exclude; then
        echo doc/tags >> .git/modules/.vim/bundle/$bundle/info/exclude
      fi
    done

    if [[ ! -e .vim/bundle/ctrlp-cmatcher/autoload/fuzzycomt.so ]]; then
      pushd .vim/bundle/ctrlp-cmatcher
      ./install.sh
      popd
    fi
  popd

  for file in .ackrc .bin .gemrc .gitconfig .js .pryrc .railsrc .tmux.conf .vim .zsh; do
    [[ -L $file ]] || ln -fs .home/$file
  done
  for file in .config/git/{ignore,attributes}; do
    mkdir -p "${file%/*}" && [ -L "$file" ] || ln -fs "$HOME/.home/$file" "$HOME/$file"
  done
  for suffix in rc; do
    [[ -L .vim$suffix ]] || ln -fs .vim/$suffix .vim$suffix
  done
  for suffix in env rc; do
    [[ -L .zsh$suffix ]] || ln -fs .zsh/$suffix .zsh$suffix
  done

  [[ "$(uname -s)" = "Darwin" ]] && .home/move-in-osx

popd
